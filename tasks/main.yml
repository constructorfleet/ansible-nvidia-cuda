---

- name: Check current state
  block:
    - stat:
        path: /etc/modprobe.d/nvidia-installer-disable-nouveau.conf
      register: mod_blacklisted
    - stat:
        path: /lib/modules/4.15.0-72-generic/kernel/drivers/video/nvidia-drm.ko
      register: nvidia_mod
    - stat:
        path: /usr/local/cuda
      register: cuda_toolkit

- name: Blacklist nouveau module
  block:
    - name: Blacklist nouveau mod
      copy:
        src: nvidia-installer-disable-nouveau.conf
        dest: /etc/modprobe.d/nvidia-installer-disable-nouveau.conf
        mode: '0644'
        owner: root
        group: root
    - name: Reboot for mod blacklist to take effect
      reboot:
        reboot_timeout: 360
  when:
    - not mod_blacklisted.stat.exists

- name: Make sure cuda library directory exists
  file:
    path: "{{ cuda_install_temp_directory }}"
    state: directory
    owner: root
    group: root
    mode: '0777'

- name: Install GPU driver
  block:
    - name: Retrieve driver
      get_url:
        url: "{{ nvidia_driver_url }}"
        dest: "{{ cuda_install_temp_directory }}//nvidia_driver.run"
        mode: '0777'
    - name: Install driver
      command: "/bin/bash {{ cuda_install_temp_directory }}//nvidia_driver.run -s"
  when: not nvidia_mod.stat.exists

- name: Make sure install temp directory exists
  file:
    path: "{{ cuda_install_temp_directory }}"
    state: directory
    owner: root
    group: root
    mode: '0777'

- name: Install Cuda repository pkg
  apt:
    deb: "{{ cuda_library_directory }}/10.0/cuda-repo-ubuntu1804_10.0.130-1_amd64.deb"

- name: Install apt key
  apt-key:
    url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
    state: present

- name: Install Cuda pkg
  apt:
    name: cuda
    update_cache: yes
    state: latest

#- name: Install CUDA toolkit and patches
#  command: "/bin/bash {{ item }} --tmpdir={{ cuda_install_temp_directory }} --silent --accept-eula"
#  with_items: "{{ cuda_toolkit_paths }}"
#  when: not cuda_toolkit.stat.exists

- name: Install CuDNN libraries and run-times
  apt:
    name: "{{ cudnn_library_paths }}"

#- name: Install CuDNN libraries and run-times
#  command: "apt install -y {{ cudnn_library_paths | join(' ') }}"
